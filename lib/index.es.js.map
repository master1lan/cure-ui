{"version":3,"file":"index.es.js","sources":["../src/utils/css.ts","../src/utils/fn.ts","../src/button/type.ts","../src/button/style.tsx","../src/utils/wapper.tsx","../src/button/index.tsx","../src/input/style.tsx","../src/input/index.tsx","../node_modules/.pnpm/nanoid@4.0.1/node_modules/nanoid/index.browser.js","../src/message/style.tsx","../src/message/index.tsx","../src/portal/index.tsx","../src/modal/style.tsx","../src/utils/getScrollBarSize.ts","../src/utils/hook.tsx","../src/modal/index.tsx","../src/popover/index.tsx","../src/tooltip/index.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nexport default function customcss(sx?: React.CSSProperties) {\n  return css(sx as any);\n}\n\n/**\n * 给元素style添加属性。\n */\nexport const ObjectToHtmlStyle = (\n  obj: React.CSSProperties,\n  ele: HTMLElement\n) => {\n  Object.entries(obj).forEach(([key, value]) => {\n    if (value) {\n      //@ts-ignore\n      ele.style[key] = value;\n    }\n  });\n};\n","/**\n * @description 简化版选择器\n */\nexport function DefensiveSwitch<T extends string>(\n  params: T,\n  targetObj: Record<T, string>,\n  defaultRes: string\n) {\n  return targetObj[params] || defaultRes;\n}\n\nexport function curry<T extends (...args: any) => any>(callback: T) {\n  return (...args: Parameters<T>) => {\n    const params = [...args];\n    if (args.length < callback.length) {\n      return curry(callback.bind(null, ...params));\n    } else {\n      return callback(...params);\n    }\n  };\n}\n\nexport const getElementStyleByName = (\n  ele: HTMLElement,\n  ...cssPropertyName: string[]\n): string[] => {\n  const _cssProperty = window.getComputedStyle(ele);\n  return cssPropertyName.map((item) => _cssProperty.getPropertyValue(item));\n};\n\nexport const getBodyMarginAndPadding = () => {\n  const res = getElementStyleByName(document.body, 'margin', 'padding');\n  return {\n    margin: openValueExampleMarginAndPadding(res[0]),\n    padding: openValueExampleMarginAndPadding(res[1]),\n  };\n};\n\nexport function openValueExampleMarginAndPadding(str: string) {\n  const [top = '0px', right = top, bottom = top, left = right] = str.split(' ');\n  return {\n    top,\n    right,\n    bottom,\n    left,\n  };\n}\n\nexport function humpStringToDashString(str: string) {\n  return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n}\n","import { css, SerializedStyles } from '@emotion/react';\nimport { DefensiveSwitch } from '@src/utils/fn';\nimport { CssSelectRequiredType, CustomSxType } from '@src/utils/type';\n/**\n * button的外形，circle为圆形，round则比较圆滚。\n */\nexport const ButtonShapeToCssChangeStyleNames = ['borderRadius'] as const,\n  ButtonShapeTypeArr = ['default', 'circle', 'round'] as const;\ntype ButtonShape = (typeof ButtonShapeTypeArr)[number];\nexport const ButtonShapeToCss = (\n  input: ButtonShape\n): CssSelectRequiredType<(typeof ButtonShapeToCssChangeStyleNames)[number]> => {\n  return {\n    borderRadius: DefensiveSwitch(\n      input,\n      { default: '4px', circle: '50%', round: '8px' },\n      '4px'\n    ),\n  };\n};\nexport const ButtonSizeToCssChangeStyleNames = ['height', 'padding'] as const;\nexport const ButtonSizeTypeArr = ['large', 'middle', 'small'] as const;\ntype ButtonSize = (typeof ButtonSizeTypeArr)[number];\nexport const ButtonSizeToCss = (\n  input: ButtonSize\n): CssSelectRequiredType<(typeof ButtonSizeToCssChangeStyleNames)[number]> => {\n  return {\n    height: DefensiveSwitch(\n      input,\n      { large: '40px', middle: '32px', small: '24px' },\n      '32px'\n    ),\n    padding: DefensiveSwitch(\n      input,\n      { large: '6px 15px', middle: '4px 15px', small: '0px 7px' },\n      '4px 15px'\n    ),\n  };\n};\n\ntype ButtonType = 'primary' | 'default' | 'text' | 'dashed';\n//todo 增加type，以及说明文档\n// export const ButtonTypeToCss = (input: ButtonType) =>\n//   DefensiveSwitch(\n//     input,\n//     { primary: \"\", default: \"\", text: \"\", dashed: \"\" },\n//     \"\"\n//   );\n\nexport const ThemeToCss = (theme: unknown): SerializedStyles => {\n  const _theme = theme as ButtonThemeType;\n  return css({\n    ...ButtonSizeToCss(_theme.size),\n    ...ButtonShapeToCss(_theme.shape),\n  });\n};\n\ntype NativeButtonProps = Omit<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  'type'\n> &\n  Partial<{\n    htmlType: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  }>;\nexport type CustomButtonProps = Partial<{\n  shape: ButtonShape;\n  size: ButtonSize;\n  type: ButtonType;\n}>;\n\nexport type ButtonThemeType = Required<CustomButtonProps>;\n\nexport type ButtonProps = NativeButtonProps & CustomButtonProps & CustomSxType;\n","import styled from '@emotion/styled';\nimport { ThemeToCss } from './type';\n\nexport const ButtonWrapper = styled.button`\n  font-size: 16px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  border-color: #d9d9d9;\n  border-style: solid;\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.88);\n  outline: none;\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  :hover,\n  :active {\n    color: #0958d9;\n    border-color: #0958d9;\n  }\n  box-shadow: 0 2px 0 rgb(0 0 0 / 2%);\n  white-space: nowrap;\n  cursor: pointer;\n\n  ${(props) => ThemeToCss(props.theme)}\n`;\n//todo 进行自定义\n","import { ReactElement } from 'react';\nimport { ThemeProvider } from '@emotion/react';\n\nexport default function CustomThemeProvider<T>(props: {\n  theme: T;\n  children: ReactElement;\n}) {\n  return (\n    <ThemeProvider theme={props.theme as any}>{props.children}</ThemeProvider>\n  );\n}\n","import customcss from '../utils/css';\nimport { ButtonWrapper } from './style';\nimport { ButtonProps, ButtonThemeType } from './type';\nimport CustomThemeProvider from '@src/utils/wapper';\nimport { forwardRef } from 'react';\n\nconst Button = forwardRef(function Button(props: ButtonProps, ref: any) {\n  const {\n    sx,\n    shape = 'default',\n    size = 'middle',\n    type = 'default',\n    ...resProps\n  } = props;\n  const ButtonTheme: ButtonThemeType = {\n    shape,\n    size,\n    type,\n  };\n  return (\n    <CustomThemeProvider theme={ButtonTheme}>\n      <ButtonWrapper css={customcss(sx)} {...resProps} ref={ref}>\n        {props.children}\n      </ButtonWrapper>\n    </CustomThemeProvider>\n  );\n});\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const InputWrapper = styled.input`\n  padding: 4px 11px;\n  box-sizing: border-box;\n  margin: 0px;\n  position: relative;\n  font-size: 14px;\n  text-overflow: ellipsis;\n  cursor: text;\n  color: rgba(0, 0, 0, 0.88);\n  background-color: #fff;\n  background-image: none;\n  border: 0.8px solid rgb(217, 217, 217);\n  border-radius: 6px;\n`;\n","import { InputWrapper } from './style';\nimport { InputProps } from './type';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\nconst Input = forwardRef(function Input(props: InputProps, ref: any) {\n  const { defaultValue, onChange, sx, ...resProps } = props;\n  return (\n    <InputWrapper\n      css={customcss(sx)}\n      defaultValue={defaultValue}\n      onChange={onChange}\n      {...resProps}\n      ref={ref}\n    />\n  );\n});\nexport default Input;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\n/**\n * message components keyframes\n */\nexport const keyframesMessageIn = keyframes`\n     from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n`,\n  keyframesMessageOut = keyframes`\n    0% {\n            opacity: 1;\n            transform: translateY(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n`;\n/**\n * message animation constructor\n */\nexport const MessagePAnimationConstructor = (\n  durantion = 3,\n  transformTime = 0.1\n) => {\n  if (durantion < transformTime) {\n    throw new Error(\n      `You can't let the animation transition time exceed the total duration!`\n    );\n  }\n  return css`\n    animation: ${keyframesMessageIn} ${transformTime} linear,\n      ${keyframesMessageOut} ${transformTime} linear\n        ${durantion - transformTime} forwards;\n  `;\n};\n\nexport const MessageP = styled.p`\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 10px;\n  padding: 12px 24px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-flow: row nowrap;\n  background-color: white;\n  color: black;\n  ${MessagePAnimationConstructor(3, 0.1)}\n`;\n","import { FC, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { createRoot } from 'react-dom/client';\nimport { MessageP } from './style';\nimport { ObjectToHtmlStyle } from '@src/utils/css';\nimport { MessageItemProps, Notice, MessageType } from './type';\n\n//todo 增加svg的显示\nconst MessageItem: FC<MessageItemProps> = (props) => {\n  const { text } = props;\n  return (\n    <MessageP>\n      <span>{text}</span>\n    </MessageP>\n  );\n};\n\nlet add: (message: Notice) => void;\nconst containerId = `container_message`;\n\nfunction getContainer() {\n  let resDom = document.querySelector(containerId) as HTMLElement;\n  if (!resDom) {\n    resDom = document.createElement('div');\n    resDom.id = containerId;\n    ObjectToHtmlStyle(\n      {\n        position: 'fixed',\n        top: '10px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        zIndex: '9999',\n      },\n      resDom\n    );\n    document.body.appendChild(resDom);\n  }\n  return resDom;\n}\n\nconst MessageContainer = () => {\n  const [msgList, setList] = useState<Notice[]>([]);\n  //todo 改成options\n  const timeout = 3000;\n  const remove = (msg: Notice) =>\n    setList((prevList) => prevList.filter((item) => msg.key !== item.key));\n  //hack\n  add = (msg) => {\n    setList((pre) => [...pre, msg]);\n    setTimeout(() => {\n      remove(msg);\n    }, timeout);\n  };\n  return (\n    <>\n      {msgList.map((msg) => (\n        <MessageItem {...msg} key={msg.key} />\n      ))}\n    </>\n  );\n};\n\nconst message = (() => {\n  createRoot(getContainer()).render(<MessageContainer />);\n  const msgType = (type: MessageType) => (text: string) =>\n    add({ text, type, key: nanoid(3) });\n  return {\n    info: msgType('info'),\n  };\n})();\n\nexport default message;\n//todo ！！！ 改成动态创建\n","import styled from '@emotion/styled';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ProtalProps } from './type';\nconst Portal = forwardRef(function Portal(props: ProtalProps, ref: any) {\n  const { children, sx, ...resProps } = props;\n  return createPortal(\n    <Div {...resProps} css={customcss(sx)} ref={ref}>\n      {children}\n    </Div>,\n    document.body\n  );\n});\n\nconst Div = styled.div();\n\nexport default Portal;\n","import styled from '@emotion/styled';\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n`;\n","import { ObjectToHtmlStyle } from './css';\n\nlet cached: number | null = null;\n\nfunction hasScrollbar(): boolean {\n  return (\n    document.body.scrollHeight >\n    (window.innerHeight || document.documentElement.clientHeight)\n  );\n}\n\nexport default function getScrollBarSize(): number {\n  if (!hasScrollbar()) {\n    cached = 0;\n  }\n  if (typeof cached === 'number') {\n    return cached;\n  }\n  const inner = document.createElement('div');\n  ObjectToHtmlStyle(\n    {\n      width: '100%',\n      height: '200px',\n    },\n    inner\n  );\n  const outer = document.createElement('div');\n  ObjectToHtmlStyle(\n    {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      width: '200px',\n      height: '150px',\n      overflow: 'hidden',\n    },\n    outer\n  );\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  const widthContained = inner.offsetWidth;\n  ObjectToHtmlStyle(\n    {\n      overflow: 'scroll',\n    },\n    outer\n  );\n  let widthScroll = inner.offsetWidth;\n\n  if (widthContained === widthScroll) {\n    widthScroll = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n  cached = widthContained - widthScroll;\n  return cached;\n}\n","import { useCallback, useEffect, useLayoutEffect, useState } from 'react';\nimport { ReactClientRect, ReactRef } from './type';\nimport getScrollBarSize from './getScrollBarSize';\nimport { getBodyMarginAndPadding } from './fn';\n/**\n * @description 获取ref元素的clientRect属性值\n */\nexport const useClientRect = (ele: ReactRef) => {\n  const [clientRect, setClientRect] = useState<ReactClientRect>(null);\n\n  // 更新元素的 ClientRect\n  const updateClientRect = useCallback(() => {\n    // return () =>\n    setClientRect(ele.current!.getBoundingClientRect());\n  }, []);\n\n  // 只有当 React 组件 didMount 时，才能取到元素的 ClientRect，所以这里要使用 useLayoutEffect\n  useLayoutEffect(() => {\n    if (ele.current) {\n      updateClientRect();\n    }\n  }, []);\n\n  return clientRect;\n};\n\ninterface HuseplacementProps {\n  triggerRect: ReactClientRect;\n  contentRect: ReactClientRect;\n  //todo 添加位置\n}\ninterface TransFormCss {\n  transform: string;\n}\n\nexport const usePlacement = ({\n  triggerRect,\n  contentRect,\n}: HuseplacementProps): TransFormCss => {\n  const [transform, set] = useState<TransFormCss>({ transform: '' });\n  useEffect(() => {\n    if (!contentRect || !triggerRect) {\n      return;\n    }\n    const {\n        left: ContentLeftPxNum,\n        width: ContentWidthPxNum,\n        top: ContentTopPxNum,\n        height: ContentHeightPxNum,\n      } = contentRect!,\n      {\n        width: TriggerWidthPxNum,\n        // height: TriggerHeightPxNum\n      } = triggerRect!;\n    const { margin: BodyMarginWithPx, padding: BodyPaddingWithPx } =\n      getBodyMarginAndPadding();\n    const XCenter =\n        ContentLeftPxNum -\n        (parseInt(BodyMarginWithPx.left) + parseInt(BodyPaddingWithPx.left)) +\n        (ContentWidthPxNum >> 1) -\n        (TriggerWidthPxNum >> 1),\n      YCenter = ContentTopPxNum + ContentHeightPxNum;\n    //todo 目前是放到上面，后续要根据位置调整\n    const transFormX = XCenter,\n      transFormY = YCenter;\n    set(() => ({\n      transform: `translate(${transFormX}px,${transFormY}px)`,\n    }));\n  }, [contentRect, triggerRect]);\n  return transform;\n};\n\nexport const useBodyScrollHide = (hidden: boolean) => {\n  useEffect(() => {\n    const ScrollSize = getScrollBarSize(),\n      bodyStyle = document.body.style;\n    if (hidden) {\n      bodyStyle.overflow = 'hidden';\n      bodyStyle.paddingRight = `${ScrollSize}px`;\n    }\n    return () => {\n      bodyStyle.overflow = '';\n      bodyStyle.paddingRight = '';\n    };\n  }, [hidden]);\n};\n","import Portal from '@src/portal';\nimport { ModalContainer } from './style';\nimport { ModalProps } from './type';\nimport { useBodyScrollHide } from '@src/utils/hook';\nimport { ReactClickEvent } from '@src/utils/type';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\n\nconst Modal = forwardRef<any, ModalProps>(function Modal(props, ref) {\n  const { visible = true, children, closeModal, sx, ...resProps } = props,\n    handlerClick = (event: ReactClickEvent) => {\n      event.stopPropagation();\n      if (event.target === event.currentTarget) {\n        closeModal();\n      }\n    };\n  useBodyScrollHide(visible);\n  return (\n    <>\n      {visible && (\n        <Portal>\n          <ModalContainer\n            onClick={handlerClick}\n            {...resProps}\n            css={customcss(sx)}\n            ref={ref}\n          >\n            {children}\n          </ModalContainer>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nexport default Modal;\n","import Portal from '@src/portal';\nimport { useClientRect, usePlacement } from '@src/utils/hook';\nimport { cloneElement, FC, useEffect, useRef, useState } from 'react';\nimport { PopOverProps } from './type';\nimport { ReactRef } from '../utils/type';\nimport customcss from '@src/utils/css';\n\nexport default function Popover(props: PopOverProps) {\n  const { defaultOpen, children, content, sx, ...resProps } = props;\n  const [open, set] = useState(defaultOpen);\n  const anchorRef = useRef(null);\n  return (\n    <>\n      {cloneElement(children, {\n        onClick: () => set((item) => !item),\n        ref: anchorRef,\n      })}\n      {open && (\n        <Portal\n          sx={{\n            position: 'fixed',\n            left: '0',\n            top: '0',\n          }}\n        >\n          <PopoverContent\n            anchorRef={anchorRef}\n            onClose={() => {\n              set((item) => !item);\n            }}\n            css={customcss(sx)}\n            {...resProps}\n          >\n            {content}\n          </PopoverContent>\n        </Portal>\n      )}\n    </>\n  );\n}\n\ntype PopoverContentProps = Omit<PopOverProps, 'defaultOpen' | 'content'> & {\n  onClose: () => void;\n  anchorRef: ReactRef;\n};\n\nconst PopoverContent: FC<PopoverContentProps> = (props) => {\n  const { children, anchorRef, onClose } = props;\n  const popoverItemRef = useRef(null);\n  const anchorRect = useClientRect(anchorRef),\n    popoverItemRect = useClientRect(popoverItemRef);\n  useEffect(() => {\n    const filterDomArr = [anchorRef.current, popoverItemRef.current];\n    const handlerClick = (event: MouseEvent) => {\n      const target = event.target;\n      !filterDomArr.includes(target as HTMLElement) && onClose();\n    };\n    window.addEventListener('click', handlerClick);\n    return () => window.removeEventListener('click', handlerClick);\n  }, []);\n  const styleTransform = usePlacement({\n    triggerRect: popoverItemRect,\n    contentRect: anchorRect,\n  });\n  return (\n    <div\n      //todo 修改样式\n      style={{\n        visibility: styleTransform.transform ? 'visible' : 'hidden',\n        ...styleTransform,\n        display: 'inline-block',\n        position: 'absolute',\n      }}\n    >\n      {cloneElement(children, {\n        ref: popoverItemRef,\n      })}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { cloneElement, FC, useRef, useState } from 'react';\nimport { ToolTipProps } from './type';\nimport { useClientRect, usePlacement } from '../utils/hook';\nimport { ReactRef } from '../utils/type';\nimport Portal from '@src/portal';\nimport customcss from '@src/utils/css';\n\nexport default function ToolTip(props: ToolTipProps) {\n  const { children, title, sx, ...resProps } = props;\n  const [visible, set] = useState(false);\n  const targetEleRef = useRef(null);\n\n  return (\n    <>\n      {cloneElement(children, {\n        onMouseEnter: set.bind(null, true),\n        onMouseLeave: set.bind(null, false),\n        ref: targetEleRef,\n        ...resProps,\n      })}\n      {visible && (\n        <Portal\n          sx={{\n            position: 'fixed',\n            left: '0',\n            top: '0',\n          }}\n        >\n          <ToolTipTrigger childrenRef={targetEleRef} title={title} sx={sx} />\n        </Portal>\n      )}\n    </>\n  );\n}\n\nconst ToolTipTrigger: FC<{ childrenRef: ReactRef; title: string; sx: any }> = (\n  props\n) => {\n  const { childrenRef, title, sx, ...resProps } = props;\n  const toolTipRef = useRef(null);\n  const toolTipRect = useClientRect(toolTipRef),\n    targetEleRect = useClientRect(childrenRef);\n  const styleTransform = usePlacement({\n    triggerRect: toolTipRect,\n    contentRect: targetEleRect,\n  });\n  return (\n    <>\n      <P\n        ref={toolTipRef}\n        style={{\n          ...styleTransform,\n          visibility: styleTransform.transform ? 'visible' : 'hidden',\n        }}\n        {...resProps}\n        css={customcss(sx)}\n      >\n        {title}\n      </P>\n    </>\n  );\n};\n\n//todo add theme\nconst P = styled('p')`\n  display: inline-block;\n  padding: 5px 8px;\n\n  position: absolute;\n  z-index: 1000;\n  word-wrap: break-word;\n  border-radius: 8px;\n`;\n"],"names":["customcss","sx","css","ObjectToHtmlStyle","obj","ele","key","value","DefensiveSwitch","params","targetObj","defaultRes","getElementStyleByName","cssPropertyName","_cssProperty","item","getBodyMarginAndPadding","res","openValueExampleMarginAndPadding","str","top","right","bottom","left","ButtonShapeToCss","input","ButtonSizeToCss","ThemeToCss","theme","_theme","ButtonWrapper","styled","props","CustomThemeProvider","ThemeProvider","Button","forwardRef","ref","shape","size","type","resProps","jsx","InputWrapper","Input","defaultValue","onChange","nanoid","id","byte","keyframesMessageIn","keyframes","keyframesMessageOut","MessagePAnimationConstructor","durantion","transformTime","MessageP","MessageItem","text","add","containerId","getContainer","resDom","MessageContainer","msgList","setList","useState","timeout","remove","msg","prevList","pre","Fragment","createElement","message","createRoot","Portal","children","createPortal","Div","ModalContainer","cached","hasScrollbar","getScrollBarSize","inner","outer","widthContained","widthScroll","useClientRect","clientRect","setClientRect","updateClientRect","useCallback","useLayoutEffect","usePlacement","triggerRect","contentRect","transform","set","useEffect","ContentLeftPxNum","ContentWidthPxNum","ContentTopPxNum","ContentHeightPxNum","TriggerWidthPxNum","BodyMarginWithPx","BodyPaddingWithPx","XCenter","YCenter","transFormX","transFormY","useBodyScrollHide","hidden","ScrollSize","bodyStyle","Modal","visible","closeModal","handlerClick","event","Popover","defaultOpen","content","open","anchorRef","useRef","jsxs","cloneElement","PopoverContent","onClose","popoverItemRef","anchorRect","popoverItemRect","filterDomArr","target","styleTransform","ToolTip","title","targetEleRef","ToolTipTrigger","childrenRef","toolTipRef","toolTipRect","targetEleRect","P"],"mappings":"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"}