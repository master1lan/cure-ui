{"version":3,"file":"index.es.js","sources":["../src/utils/css.ts","../src/utils/fn.ts","../src/button/type.ts","../src/button/style.tsx","../src/utils/wapper.tsx","../src/button/index.tsx","../src/input/style.tsx","../src/input/index.tsx","../node_modules/.pnpm/nanoid@4.0.1/node_modules/nanoid/index.browser.js","../src/message/style.tsx","../src/message/index.tsx","../src/portal/index.tsx","../src/modal/style.tsx","../src/utils/getScrollBarSize.ts","../src/utils/hook.tsx","../src/modal/index.tsx","../src/popover/index.tsx","../src/tooltip/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nexport default function customcss(sx?: React.CSSProperties) {\r\n  return css(sx as any);\r\n}\r\n\r\n/**\r\n * 给元素style添加属性。\r\n */\r\nexport const ObjectToHtmlStyle = (\r\n  obj: React.CSSProperties,\r\n  ele: HTMLElement\r\n) => {\r\n  Object.entries(obj).forEach(([key, value]) => {\r\n    if (value) {\r\n      //@ts-ignore\r\n      ele.style[key] = value;\r\n    }\r\n  });\r\n};\r\n","import { ReactRef } from \"./type\";\r\n\r\n/**\r\n * @description 简化版选择器\r\n */\r\nexport function DefensiveSwitch<T extends string>(\r\n  params: T,\r\n  targetObj: Record<T, string>,\r\n  defaultRes: string\r\n) {\r\n  return targetObj[params] || defaultRes;\r\n}\r\n\r\nexport function curry<T extends (...args: any) => any>(callback: T) {\r\n  return (...args: Parameters<T>) => {\r\n    const params = [...args];\r\n    if (args.length < callback.length) {\r\n      return curry(callback.bind(null, ...params));\r\n    } else {\r\n      return callback(...params);\r\n    }\r\n  };\r\n}\r\n\r\nexport const getElementStyleByName = (\r\n  ele: HTMLElement,\r\n  ...cssPropertyName: string[]\r\n): string[] => {\r\n  const _cssProperty = window.getComputedStyle(ele);\r\n  return cssPropertyName.map((item) => _cssProperty.getPropertyValue(item));\r\n};\r\n\r\nexport const getBodyMarginAndPadding = () => {\r\n  const res = getElementStyleByName(document.body, \"margin\", \"padding\");\r\n  return {\r\n    margin: openValueExampleMarginAndPadding(res[0]),\r\n    padding: openValueExampleMarginAndPadding(res[1]),\r\n  };\r\n};\r\n\r\nexport function openValueExampleMarginAndPadding(str: string) {\r\n  const [top = \"0px\", right = top, bottom = top, left = right] = str.split(\" \");\r\n  return {\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n  };\r\n}\r\n\r\nexport function humpStringToDashString(str: string) {\r\n  return str.replace(/\\B([A-Z])/g, \"-$1\").toLowerCase();\r\n}\r\n","import { css, SerializedStyles } from \"@emotion/react\";\r\nimport { DefensiveSwitch } from \"@src/utils/fn\";\r\nimport { CssSelectRequiredType, CustomSxType } from \"@src/utils/type\";\r\n/**\r\n * button的外形，circle为圆形，round则比较圆滚。\r\n */\r\nexport const ButtonShapeToCssChangeStyleNames = [\"borderRadius\"] as const,\r\n  ButtonShapeTypeArr = [\"default\", \"circle\", \"round\"] as const;\r\ntype ButtonShape = (typeof ButtonShapeTypeArr)[number];\r\nexport const ButtonShapeToCss = (\r\n  input: ButtonShape\r\n): CssSelectRequiredType<(typeof ButtonShapeToCssChangeStyleNames)[number]> => {\r\n  return {\r\n    borderRadius: DefensiveSwitch(\r\n      input,\r\n      { default: \"4px\", circle: \"50%\", round: \"8px\" },\r\n      \"4px\"\r\n    ),\r\n  };\r\n};\r\nexport const ButtonSizeToCssChangeStyleNames = [\"height\", \"padding\"] as const;\r\nexport const ButtonSizeTypeArr = [\"large\", \"middle\", \"small\"] as const;\r\ntype ButtonSize = (typeof ButtonSizeTypeArr)[number];\r\nexport const ButtonSizeToCss = (\r\n  input: ButtonSize\r\n): CssSelectRequiredType<(typeof ButtonSizeToCssChangeStyleNames)[number]> => {\r\n  return {\r\n    height: DefensiveSwitch(\r\n      input,\r\n      { large: \"40px\", middle: \"32px\", small: \"24px\" },\r\n      \"32px\"\r\n    ),\r\n    padding: DefensiveSwitch(\r\n      input,\r\n      { large: \"6px 15px\", middle: \"4px 15px\", small: \"0px 7px\" },\r\n      \"4px 15px\"\r\n    ),\r\n  };\r\n};\r\n\r\ntype ButtonType = \"primary\" | \"default\" | \"text\" | \"dashed\";\r\n//todo 增加type，以及说明文档\r\n// export const ButtonTypeToCss = (input: ButtonType) =>\r\n//   DefensiveSwitch(\r\n//     input,\r\n//     { primary: \"\", default: \"\", text: \"\", dashed: \"\" },\r\n//     \"\"\r\n//   );\r\n\r\nexport const ThemeToCss = (theme: unknown): SerializedStyles => {\r\n  const _theme = theme as ButtonThemeType;\r\n  return css({\r\n    ...ButtonSizeToCss(_theme.size),\r\n    ...ButtonShapeToCss(_theme.shape),\r\n  });\r\n};\r\n\r\ntype NativeButtonProps = Omit<\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n  \"type\"\r\n> &\r\n  Partial<{\r\n    htmlType: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"];\r\n  }>;\r\nexport type CustomButtonProps = Partial<{\r\n  shape: ButtonShape;\r\n  size: ButtonSize;\r\n  type: ButtonType;\r\n}>;\r\n\r\nexport type ButtonThemeType = Required<CustomButtonProps>;\r\n\r\nexport type ButtonProps = NativeButtonProps & CustomButtonProps & CustomSxType;\r\n","import styled from \"@emotion/styled\";\r\nimport { ThemeToCss } from \"./type\";\r\n\r\nexport const ButtonWrapper = styled.button`\r\n  font-size: 16px;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-color: #d9d9d9;\r\n  border-style: solid;\r\n  background-color: #fff;\r\n  color: rgba(0, 0, 0, 0.88);\r\n  outline: none;\r\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n\r\n  :hover,\r\n  :active {\r\n    color: #0958d9;\r\n    border-color: #0958d9;\r\n  }\r\n  box-shadow: 0 2px 0 rgb(0 0 0 / 2%);\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n\r\n  ${(props) => ThemeToCss(props.theme)}\r\n`;\r\n//todo 进行自定义\r\n","import { ReactElement } from \"react\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\n\r\nexport default function CustomThemeProvider<T>(props: {\r\n  theme: T;\r\n  children: ReactElement;\r\n}) {\r\n  return (\r\n    <ThemeProvider theme={props.theme as any}>{props.children}</ThemeProvider>\r\n  );\r\n}\r\n","import customcss from \"../utils/css\";\r\nimport { ButtonWrapper } from \"./style\";\r\nimport { ButtonProps, ButtonThemeType } from \"./type\";\r\nimport CustomThemeProvider from \"@src/utils/wapper\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Button = forwardRef(function Button(props: ButtonProps, ref: any) {\r\n  const {\r\n    sx,\r\n    shape = \"default\",\r\n    size = \"middle\",\r\n    type = \"default\",\r\n    ...resProps\r\n  } = props;\r\n  const ButtonTheme: ButtonThemeType = {\r\n    shape,\r\n    size,\r\n    type,\r\n  };\r\n  return (\r\n    <CustomThemeProvider theme={ButtonTheme}>\r\n      <ButtonWrapper css={customcss(props.sx)} {...resProps} ref={ref}>\r\n        {props.children}\r\n      </ButtonWrapper>\r\n    </CustomThemeProvider>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const InputWrapper = styled.input`\r\n  padding: 4px 11px;\r\n  box-sizing: border-box;\r\n  margin: 0px;\r\n  position: relative;\r\n  font-size: 14px;\r\n  text-overflow: ellipsis;\r\n  cursor: text;\r\n  color: rgba(0, 0, 0, 0.88);\r\n  background-color: #fff;\r\n  background-image: none;\r\n  border: 0.8px solid rgb(217, 217, 217);\r\n  border-radius: 6px;\r\n`;\r\n","import { InputWrapper } from \"./style\";\r\nimport { InputProps } from \"./type\";\r\nimport customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\nconst Input = forwardRef(function Input(props: InputProps, ref: any) {\r\n  const { defaultValue, onChange, sx, ...resProps } = props;\r\n  return (\r\n    <InputWrapper\r\n      css={customcss(sx)}\r\n      defaultValue={defaultValue}\r\n      onChange={onChange}\r\n      {...resProps}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\nexport default Input;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { css, keyframes } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n/**\r\n * message components keyframes\r\n */\r\nexport const keyframesMessageIn = keyframes`\r\n     from {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n`,\r\n  keyframesMessageOut = keyframes`\r\n    0% {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n    }\r\n    to {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n    }\r\n`;\r\n/**\r\n * message animation constructor\r\n */\r\nexport const MessagePAnimationConstructor = (\r\n  durantion: number = 3,\r\n  transformTime: number = 0.1\r\n) => {\r\n  if (durantion < transformTime) {\r\n    throw new Error(\r\n      `You can't let the animation transition time exceed the total duration!`\r\n    );\r\n  }\r\n  return css`\r\n    animation: ${keyframesMessageIn} ${transformTime} linear,\r\n      ${keyframesMessageOut} ${transformTime} linear\r\n        ${durantion - transformTime} forwards;\r\n  `;\r\n};\r\n\r\nexport const MessageP = styled.p`\r\n  border-radius: 8px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 10px;\r\n  padding: 12px 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  ${MessagePAnimationConstructor(3, 0.1)}\r\n`;\r\n","import { FC, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { MessageP } from \"./style\";\r\nimport { ObjectToHtmlStyle } from \"@src/utils/css\";\r\nimport { MessageItemProps, Notice, MessageType } from \"./type\";\r\n\r\n//todo 增加svg的显示\r\nconst MessageItem: FC<MessageItemProps> = (props) => {\r\n  const { text, type } = props;\r\n  return (\r\n    <MessageP>\r\n      <span>{text}</span>\r\n    </MessageP>\r\n  );\r\n};\r\n\r\nlet add: (message: Notice) => void;\r\nconst containerId = `container_message`;\r\n\r\nfunction getContainer() {\r\n  let resDom = document.querySelector(containerId) as HTMLElement;\r\n  if (!resDom) {\r\n    resDom = document.createElement(\"div\");\r\n    resDom.id = containerId;\r\n    ObjectToHtmlStyle(\r\n      {\r\n        position: \"fixed\",\r\n        top: \"10px\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, 0)\",\r\n        zIndex: \"9999\",\r\n      },\r\n      resDom\r\n    );\r\n    document.body.appendChild(resDom);\r\n  }\r\n  return resDom;\r\n}\r\n\r\nconst MessageContainer = () => {\r\n  const [msgList, setList] = useState<Notice[]>([]);\r\n  //todo 改成options\r\n  const timeout = 3000;\r\n  const remove = (msg: Notice) =>\r\n    setList((prevList) => prevList.filter((item) => msg.key !== item.key));\r\n  //hack\r\n  add = (msg) => {\r\n    setList((pre) => [...pre, msg]);\r\n    setTimeout(() => {\r\n      remove(msg);\r\n    }, timeout);\r\n  };\r\n  return (\r\n    <>\r\n      {msgList.map((msg) => (\r\n        <MessageItem {...msg} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst message = (() => {\r\n  createRoot(getContainer()).render(<MessageContainer />);\r\n  const msgType = (type: MessageType) => (text: string) =>\r\n    add({ text, type, key: nanoid(3) });\r\n  return {\r\n    info: msgType(\"info\"),\r\n  };\r\n})();\r\n\r\nexport default message;\r\n//todo ！！！ 改成动态创建\r\n","import customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { ProtalProps } from \"./type\";\r\nconst Portal = forwardRef(function Portal(props: ProtalProps, ref: any) {\r\n  const { children, sx, ...resProps } = props;\r\n  return createPortal(\r\n    <div {...resProps} css={customcss(sx)} ref={ref}>\r\n      {children}\r\n    </div>,\r\n    document.body\r\n  );\r\n});\r\nexport default Portal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 100;\r\n`;\r\n","import { ObjectToHtmlStyle } from \"./css\";\r\n\r\nlet cached: number | null = null;\r\n\r\nexport default function getScrollBarSize(): number {\r\n  if (typeof cached === \"number\") {\r\n    return cached;\r\n  }\r\n  const inner = document.createElement(\"div\");\r\n  ObjectToHtmlStyle(\r\n    {\r\n      width: \"100%\",\r\n      height: \"200px\",\r\n    },\r\n    inner\r\n  );\r\n  const outer = document.createElement(\"div\");\r\n  ObjectToHtmlStyle(\r\n    {\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      pointerEvents: \"none\",\r\n      visibility: \"hidden\",\r\n      width: \"200px\",\r\n      height: \"150px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    outer\r\n  );\r\n  outer.appendChild(inner);\r\n  document.body.appendChild(outer);\r\n  const widthContained = inner.offsetWidth;\r\n  ObjectToHtmlStyle(\r\n    {\r\n      overflow: \"scroll\",\r\n    },\r\n    outer\r\n  );\r\n  let widthScroll = inner.offsetWidth;\r\n\r\n  if (widthContained === widthScroll) {\r\n    widthScroll = outer.clientWidth;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n  cached = widthContained - widthScroll;\r\n  return cached;\r\n}\r\n","import { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { ReactClientRect, ReactRef } from \"./type\";\r\nimport getScrollBarSize from \"./getScrollBarSize\";\r\nimport { getBodyMarginAndPadding } from \"./fn\";\r\n/**\r\n * @description 获取ref元素的clientRect属性值\r\n */\r\nexport const useClientRect = (ele: ReactRef) => {\r\n  const [clientRect, setClientRect] = useState<ReactClientRect>(null);\r\n\r\n  // 更新元素的 ClientRect\r\n  const updateClientRect = useCallback(() => {\r\n    // return () =>\r\n    setClientRect(ele.current!.getBoundingClientRect());\r\n  }, []);\r\n\r\n  // 只有当 React 组件 didMount 时，才能取到元素的 ClientRect，所以这里要使用 useLayoutEffect\r\n  useLayoutEffect(() => {\r\n    if (ele.current) {\r\n      updateClientRect();\r\n    }\r\n  }, []);\r\n\r\n  return clientRect;\r\n};\r\n\r\ninterface HuseplacementProps {\r\n  triggerRect: ReactClientRect;\r\n  contentRect: ReactClientRect;\r\n  //todo 添加位置\r\n}\r\ninterface TransFormCss {\r\n  transform: string;\r\n}\r\n\r\nexport const usePlacement = ({\r\n  triggerRect,\r\n  contentRect,\r\n}: HuseplacementProps): TransFormCss => {\r\n  const [transform, set] = useState<TransFormCss>({ transform: \"\" });\r\n  useEffect(() => {\r\n    if (!contentRect || !triggerRect) {\r\n      return;\r\n    }\r\n    const {\r\n        left: ContentLeftPxNum,\r\n        width: ContentWidthPxNum,\r\n        top: ContentTopPxNum,\r\n        height: ContentHeightPxNum,\r\n      } = contentRect!,\r\n      { width: TriggerWidthPxNum, height: TriggerHeightPxNum } = triggerRect!;\r\n    const { margin: BodyMarginWithPx, padding: BodyPaddingWithPx } =\r\n      getBodyMarginAndPadding();\r\n    const XCenter =\r\n        ContentLeftPxNum -\r\n        (parseInt(BodyMarginWithPx.left) + parseInt(BodyPaddingWithPx.left)) +\r\n        (ContentWidthPxNum >> 1) -\r\n        (TriggerWidthPxNum >> 1),\r\n      YCenter = ContentTopPxNum + ContentHeightPxNum;\r\n    //todo 目前是放到上面，后续要根据位置调整\r\n    const transFormX = XCenter,\r\n      transFormY = YCenter;\r\n    set((obj) => ({\r\n      transform: `translate(${transFormX}px,${transFormY}px)`,\r\n    }));\r\n  }, [contentRect, triggerRect]);\r\n  return transform;\r\n};\r\n\r\nexport const useBodyScrollHide = (hidden: boolean) => {\r\n  useEffect(() => {\r\n    const ScrollSize = getScrollBarSize(),\r\n      bodyStyle = document.body.style;\r\n    if (hidden) {\r\n      bodyStyle.overflow = \"hidden\";\r\n      bodyStyle.paddingRight = `${ScrollSize}px`;\r\n    }\r\n    return () => {\r\n      bodyStyle.overflow = \"\";\r\n      bodyStyle.paddingRight = \"\";\r\n    };\r\n  }, [hidden]);\r\n};\r\n","import Portal from \"@src/portal\";\r\nimport { ModalContainer } from \"./style\";\r\nimport { ModalProps } from \"./type\";\r\nimport { useBodyScrollHide } from \"@src/utils/hook\";\r\nimport { ReactClickEvent } from \"@src/utils/type\";\r\nimport customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Modal = forwardRef<any, ModalProps>(function Modal(props, ref) {\r\n  const { visible = true, children, closeModal, sx, ...resProps } = props,\r\n    handlerClick = (event: ReactClickEvent) => {\r\n      event.stopPropagation();\r\n      if (event.target === event.currentTarget) {\r\n        closeModal();\r\n      }\r\n    };\r\n  useBodyScrollHide(visible);\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <Portal>\r\n          <ModalContainer\r\n            onClick={handlerClick}\r\n            {...resProps}\r\n            css={customcss(sx)}\r\n            ref={ref}\r\n          >\r\n            {children}\r\n          </ModalContainer>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import Portal from \"@src/portal\";\r\nimport { useClientRect, usePlacement } from \"@src/utils/hook\";\r\nimport { cloneElement, FC, useEffect, useRef, useState } from \"react\";\r\nimport { PopOverProps } from \"./type\";\r\nimport { ReactRef } from \"../utils/type\";\r\nimport customcss from \"@src/utils/css\";\r\n\r\nexport default function Popover(props: PopOverProps) {\r\n  const { defaultOpen, children, content, sx, ...resProps } = props;\r\n  const [open, set] = useState(defaultOpen);\r\n  const anchorRef = useRef(null);\r\n  return (\r\n    <>\r\n      {cloneElement(children, {\r\n        onClick: () => set((item) => !item),\r\n        ref: anchorRef,\r\n      })}\r\n      {open && (\r\n        <Portal\r\n          sx={{\r\n            position: \"fixed\",\r\n            left: \"0\",\r\n            top: \"0\",\r\n          }}\r\n        >\r\n          <PopoverContent\r\n            anchorRef={anchorRef}\r\n            onClose={() => {\r\n              set((item) => !item);\r\n            }}\r\n            css={customcss(sx)}\r\n            {...resProps}\r\n          >\r\n            {content}\r\n          </PopoverContent>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ntype PopoverContentProps = Omit<PopOverProps, \"defaultOpen\" | \"content\"> & {\r\n  onClose: () => void;\r\n  anchorRef: ReactRef;\r\n};\r\n\r\nconst PopoverContent: FC<PopoverContentProps> = (props) => {\r\n  const { children, anchorRef, onClose } = props;\r\n  const popoverItemRef = useRef(null);\r\n  const anchorRect = useClientRect(anchorRef),\r\n    popoverItemRect = useClientRect(popoverItemRef);\r\n  useEffect(() => {\r\n    const filterDomArr = [anchorRef.current, popoverItemRef.current];\r\n    const handlerClick = (event: MouseEvent) => {\r\n      const target = event.target;\r\n      !filterDomArr.includes(target as HTMLElement) && onClose();\r\n    };\r\n    window.addEventListener(\"click\", handlerClick);\r\n    return () => window.removeEventListener(\"click\", handlerClick);\r\n  }, []);\r\n  const styleTransform = usePlacement({\r\n    triggerRect: popoverItemRect,\r\n    contentRect: anchorRect,\r\n  });\r\n  return (\r\n    <div\r\n      //todo 修改样式\r\n      style={{\r\n        visibility: styleTransform.transform ? \"visible\" : \"hidden\",\r\n        ...styleTransform,\r\n        display: \"inline-block\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      {cloneElement(children, {\r\n        ref: popoverItemRef,\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { cloneElement, FC, useRef, useState } from \"react\";\r\nimport { ToolTipProps } from \"./type\";\r\nimport { useClientRect, usePlacement } from \"../utils/hook\";\r\nimport { ReactRef } from \"../utils/type\";\r\nimport Portal from \"@src/portal\";\r\nimport customcss from \"@src/utils/css\";\r\n\r\nexport default function ToolTip(props: ToolTipProps) {\r\n  const { children, title, sx, ...resProps } = props;\r\n  const [visible, set] = useState(false);\r\n  const targetEleRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      {cloneElement(children, {\r\n        onMouseEnter: set.bind(null, true),\r\n        onMouseLeave: set.bind(null, false),\r\n        ref: targetEleRef,\r\n        ...resProps,\r\n      })}\r\n      {visible && (\r\n        <Portal\r\n          sx={{\r\n            position: \"fixed\",\r\n            left: \"0\",\r\n            top: \"0\",\r\n          }}\r\n        >\r\n          <ToolTipTrigger childrenRef={targetEleRef} title={title} sx={sx} />\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ToolTipTrigger: FC<{ childrenRef: ReactRef; title: string; sx: any }> = (\r\n  props\r\n) => {\r\n  const { childrenRef, title, sx, ...resProps } = props;\r\n  const toolTipRef = useRef(null);\r\n  const toolTipRect = useClientRect(toolTipRef),\r\n    targetEleRect = useClientRect(childrenRef);\r\n  const styleTransform = usePlacement({\r\n    triggerRect: toolTipRect,\r\n    contentRect: targetEleRect,\r\n  });\r\n  return (\r\n    <>\r\n      <P\r\n        ref={toolTipRef}\r\n        style={{\r\n          ...styleTransform,\r\n          visibility: styleTransform.transform ? \"visible\" : \"hidden\",\r\n        }}\r\n        {...resProps}\r\n        css={customcss(sx)}\r\n      >\r\n        {title}\r\n      </P>\r\n    </>\r\n  );\r\n};\r\n\r\n//todo add theme\r\nconst P = styled(\"p\")`\r\n  display: inline-block;\r\n  padding: 5px 8px;\r\n\r\n  position: absolute;\r\n  z-index: 1000;\r\n  word-wrap: break-word;\r\n  border-radius: 8px;\r\n`;\r\n"],"names":["customcss","sx","css","ObjectToHtmlStyle","obj","ele","key","value","DefensiveSwitch","params","targetObj","defaultRes","getElementStyleByName","cssPropertyName","_cssProperty","item","getBodyMarginAndPadding","res","openValueExampleMarginAndPadding","str","top","right","bottom","left","ButtonShapeToCss","input","ButtonSizeToCss","ThemeToCss","theme","_theme","ButtonWrapper","styled","props","CustomThemeProvider","ThemeProvider","Button","forwardRef","ref","shape","size","type","resProps","jsx","InputWrapper","Input","defaultValue","onChange","nanoid","id","byte","keyframesMessageIn","keyframes","keyframesMessageOut","MessagePAnimationConstructor","durantion","transformTime","MessageP","MessageItem","text","add","containerId","getContainer","resDom","MessageContainer","msgList","setList","useState","timeout","remove","msg","prevList","pre","Fragment","message","createRoot","Portal","children","createPortal","ModalContainer","cached","getScrollBarSize","inner","outer","widthContained","widthScroll","useClientRect","clientRect","setClientRect","updateClientRect","useCallback","useLayoutEffect","usePlacement","triggerRect","contentRect","transform","set","useEffect","ContentLeftPxNum","ContentWidthPxNum","ContentTopPxNum","ContentHeightPxNum","TriggerWidthPxNum","TriggerHeightPxNum","BodyMarginWithPx","BodyPaddingWithPx","XCenter","YCenter","transFormX","transFormY","useBodyScrollHide","hidden","ScrollSize","bodyStyle","Modal","visible","closeModal","handlerClick","event","Popover","defaultOpen","content","open","anchorRef","useRef","jsxs","cloneElement","PopoverContent","onClose","popoverItemRef","anchorRect","popoverItemRect","filterDomArr","target","styleTransform","ToolTip","title","targetEleRef","ToolTipTrigger","childrenRef","toolTipRef","toolTipRect","targetEleRect","P"],"mappings":"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"}