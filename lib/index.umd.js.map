{"version":3,"file":"index.umd.js","sources":["../src/utils/css.ts","../src/utils/fn.ts","../src/button/type.ts","../src/button/style.tsx","../src/utils/wapper.tsx","../src/button/index.tsx","../src/input/style.tsx","../src/input/index.tsx","../node_modules/.pnpm/nanoid@4.0.1/node_modules/nanoid/index.browser.js","../src/message/style.tsx","../src/message/index.tsx","../src/portal/index.tsx","../src/modal/style.tsx","../src/utils/getScrollBarSize.ts","../src/utils/hook.tsx","../src/modal/index.tsx","../src/popover/index.tsx","../src/tooltip/index.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nexport default function customcss(sx?: React.CSSProperties) {\n  return css(sx as any);\n}\n\n/**\n * 给元素style添加属性。\n */\nexport const ObjectToHtmlStyle = (\n  obj: React.CSSProperties,\n  ele: HTMLElement\n) => {\n  Object.entries(obj).forEach(([key, value]) => {\n    if (value) {\n      //@ts-ignore\n      ele.style[key] = value;\n    }\n  });\n};\n","/**\n * @description 简化版选择器\n */\nexport function DefensiveSwitch<T extends string>(\n  params: T,\n  targetObj: Record<T, string>,\n  defaultRes: string\n) {\n  return targetObj[params] || defaultRes;\n}\n\nexport function curry<T extends (...args: any) => any>(callback: T) {\n  return (...args: Parameters<T>) => {\n    const params = [...args];\n    if (args.length < callback.length) {\n      return curry(callback.bind(null, ...params));\n    } else {\n      return callback(...params);\n    }\n  };\n}\n\nexport const getElementStyleByName = (\n  ele: HTMLElement,\n  ...cssPropertyName: string[]\n): string[] => {\n  const _cssProperty = window.getComputedStyle(ele);\n  return cssPropertyName.map((item) => _cssProperty.getPropertyValue(item));\n};\n\nexport const getBodyMarginAndPadding = () => {\n  const res = getElementStyleByName(document.body, 'margin', 'padding');\n  return {\n    margin: openValueExampleMarginAndPadding(res[0]),\n    padding: openValueExampleMarginAndPadding(res[1]),\n  };\n};\n\nexport function openValueExampleMarginAndPadding(str: string) {\n  const [top = '0px', right = top, bottom = top, left = right] = str.split(' ');\n  return {\n    top,\n    right,\n    bottom,\n    left,\n  };\n}\n\nexport function humpStringToDashString(str: string) {\n  return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n}\n","import { css, SerializedStyles } from '@emotion/react';\nimport { DefensiveSwitch } from '@src/utils/fn';\nimport { CssSelectRequiredType, CustomSxType } from '@src/utils/type';\n/**\n * button的外形，circle为圆形，round则比较圆滚。\n */\nexport const ButtonShapeToCssChangeStyleNames = ['borderRadius'] as const,\n  ButtonShapeTypeArr = ['default', 'circle', 'round'] as const;\ntype ButtonShape = (typeof ButtonShapeTypeArr)[number];\nexport const ButtonShapeToCss = (\n  input: ButtonShape\n): CssSelectRequiredType<(typeof ButtonShapeToCssChangeStyleNames)[number]> => {\n  return {\n    borderRadius: DefensiveSwitch(\n      input,\n      { default: '4px', circle: '50%', round: '8px' },\n      '4px'\n    ),\n  };\n};\nexport const ButtonSizeToCssChangeStyleNames = ['height', 'padding'] as const;\nexport const ButtonSizeTypeArr = ['large', 'middle', 'small'] as const;\ntype ButtonSize = (typeof ButtonSizeTypeArr)[number];\nexport const ButtonSizeToCss = (\n  input: ButtonSize\n): CssSelectRequiredType<(typeof ButtonSizeToCssChangeStyleNames)[number]> => {\n  return {\n    height: DefensiveSwitch(\n      input,\n      { large: '40px', middle: '32px', small: '24px' },\n      '32px'\n    ),\n    padding: DefensiveSwitch(\n      input,\n      { large: '6px 15px', middle: '4px 15px', small: '0px 7px' },\n      '4px 15px'\n    ),\n  };\n};\n\ntype ButtonType = 'primary' | 'default' | 'text' | 'dashed';\n//todo 增加type，以及说明文档\n// export const ButtonTypeToCss = (input: ButtonType) =>\n//   DefensiveSwitch(\n//     input,\n//     { primary: \"\", default: \"\", text: \"\", dashed: \"\" },\n//     \"\"\n//   );\n\nexport const ThemeToCss = (theme: unknown): SerializedStyles => {\n  const _theme = theme as ButtonThemeType;\n  return css({\n    ...ButtonSizeToCss(_theme.size),\n    ...ButtonShapeToCss(_theme.shape),\n  });\n};\n\ntype NativeButtonProps = Omit<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  'type'\n> &\n  Partial<{\n    htmlType: React.ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  }>;\nexport type CustomButtonProps = Partial<{\n  shape: ButtonShape;\n  size: ButtonSize;\n  type: ButtonType;\n}>;\n\nexport type ButtonThemeType = Required<CustomButtonProps>;\n\nexport type ButtonProps = NativeButtonProps & CustomButtonProps & CustomSxType;\n","import styled from '@emotion/styled';\nimport { ThemeToCss } from './type';\n\nexport const ButtonWrapper = styled.button`\n  font-size: 16px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  border-color: #d9d9d9;\n  border-style: solid;\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.88);\n  outline: none;\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  :hover,\n  :active {\n    color: #0958d9;\n    border-color: #0958d9;\n  }\n  box-shadow: 0 2px 0 rgb(0 0 0 / 2%);\n  white-space: nowrap;\n  cursor: pointer;\n\n  ${(props) => ThemeToCss(props.theme)}\n`;\n//todo 进行自定义\n","import { ReactElement } from 'react';\nimport { ThemeProvider } from '@emotion/react';\n\nexport default function CustomThemeProvider<T>(props: {\n  theme: T;\n  children: ReactElement;\n}) {\n  return (\n    <ThemeProvider theme={props.theme as any}>{props.children}</ThemeProvider>\n  );\n}\n","import customcss from '../utils/css';\nimport { ButtonWrapper } from './style';\nimport { ButtonProps, ButtonThemeType } from './type';\nimport CustomThemeProvider from '@src/utils/wapper';\nimport { forwardRef } from 'react';\n\nconst Button = forwardRef(function Button(props: ButtonProps, ref: any) {\n  const {\n    sx,\n    shape = 'default',\n    size = 'middle',\n    type = 'default',\n    ...resProps\n  } = props;\n  const ButtonTheme: ButtonThemeType = {\n    shape,\n    size,\n    type,\n  };\n  return (\n    <CustomThemeProvider theme={ButtonTheme}>\n      <ButtonWrapper css={customcss(sx)} {...resProps} ref={ref}>\n        {props.children}\n      </ButtonWrapper>\n    </CustomThemeProvider>\n  );\n});\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const InputWrapper = styled.input`\n  padding: 4px 11px;\n  box-sizing: border-box;\n  margin: 0px;\n  position: relative;\n  font-size: 14px;\n  text-overflow: ellipsis;\n  cursor: text;\n  color: rgba(0, 0, 0, 0.88);\n  background-color: #fff;\n  background-image: none;\n  border: 0.8px solid rgb(217, 217, 217);\n  border-radius: 6px;\n`;\n","import { InputWrapper } from './style';\nimport { InputProps } from './type';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\nconst Input = forwardRef(function Input(props: InputProps, ref: any) {\n  const { defaultValue, onChange, sx, ...resProps } = props;\n  return (\n    <InputWrapper\n      css={customcss(sx)}\n      defaultValue={defaultValue}\n      onChange={onChange}\n      {...resProps}\n      ref={ref}\n    />\n  );\n});\nexport default Input;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\n/**\n * message components keyframes\n */\nexport const keyframesMessageIn = keyframes`\n     from {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n`,\n  keyframesMessageOut = keyframes`\n    0% {\n            opacity: 1;\n            transform: translateY(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateY(-10px);\n    }\n`;\n/**\n * message animation constructor\n */\nexport const MessagePAnimationConstructor = (\n  durantion = 3,\n  transformTime = 0.1\n) => {\n  if (durantion < transformTime) {\n    throw new Error(\n      `You can't let the animation transition time exceed the total duration!`\n    );\n  }\n  return css`\n    animation: ${keyframesMessageIn} ${transformTime} linear,\n      ${keyframesMessageOut} ${transformTime} linear\n        ${durantion - transformTime} forwards;\n  `;\n};\n\nexport const MessageP = styled.p`\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 10px;\n  padding: 12px 24px;\n  margin-bottom: 10px;\n  display: flex;\n  flex-flow: row nowrap;\n  ${MessagePAnimationConstructor(3, 0.1)}\n`;\n","import { FC, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { createRoot } from 'react-dom/client';\nimport { MessageP } from './style';\nimport { ObjectToHtmlStyle } from '@src/utils/css';\nimport { MessageItemProps, Notice, MessageType } from './type';\n\n//todo 增加svg的显示\nconst MessageItem: FC<MessageItemProps> = (props) => {\n  const { text } = props;\n  return (\n    <MessageP>\n      <span>{text}</span>\n    </MessageP>\n  );\n};\n\nlet add: (message: Notice) => void;\nconst containerId = `container_message`;\n\nfunction getContainer() {\n  let resDom = document.querySelector(containerId) as HTMLElement;\n  if (!resDom) {\n    resDom = document.createElement('div');\n    resDom.id = containerId;\n    ObjectToHtmlStyle(\n      {\n        position: 'fixed',\n        top: '10px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        zIndex: '9999',\n      },\n      resDom\n    );\n    document.body.appendChild(resDom);\n  }\n  return resDom;\n}\n\nconst MessageContainer = () => {\n  const [msgList, setList] = useState<Notice[]>([]);\n  //todo 改成options\n  const timeout = 3000;\n  const remove = (msg: Notice) =>\n    setList((prevList) => prevList.filter((item) => msg.key !== item.key));\n  //hack\n  add = (msg) => {\n    setList((pre) => [...pre, msg]);\n    setTimeout(() => {\n      remove(msg);\n    }, timeout);\n  };\n  return (\n    <>\n      {msgList.map((msg) => (\n        <MessageItem {...msg} key={msg.key} />\n      ))}\n    </>\n  );\n};\n\nconst message = (() => {\n  createRoot(getContainer()).render(<MessageContainer />);\n  const msgType = (type: MessageType) => (text: string) =>\n    add({ text, type, key: nanoid(3) });\n  return {\n    info: msgType('info'),\n  };\n})();\n\nexport default message;\n//todo ！！！ 改成动态创建\n","import styled from '@emotion/styled';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ProtalProps } from './type';\nconst Portal = forwardRef(function Portal(props: ProtalProps, ref: any) {\n  const { children, sx, ...resProps } = props;\n  return createPortal(\n    <Div {...resProps} css={customcss(sx)} ref={ref}>\n      {children}\n    </Div>,\n    document.body\n  );\n});\n\nconst Div = styled.div();\n\nexport default Portal;\n","import styled from '@emotion/styled';\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n`;\n","import { ObjectToHtmlStyle } from './css';\n\nlet cached: number | null = null;\n\nfunction hasScrollbar(): boolean {\n  return (\n    document.body.scrollHeight >\n    (window.innerHeight || document.documentElement.clientHeight)\n  );\n}\n\nexport default function getScrollBarSize(): number {\n  if (!hasScrollbar()) {\n    cached = 0;\n  }\n  if (typeof cached === 'number') {\n    return cached;\n  }\n  const inner = document.createElement('div');\n  ObjectToHtmlStyle(\n    {\n      width: '100%',\n      height: '200px',\n    },\n    inner\n  );\n  const outer = document.createElement('div');\n  ObjectToHtmlStyle(\n    {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      pointerEvents: 'none',\n      visibility: 'hidden',\n      width: '200px',\n      height: '150px',\n      overflow: 'hidden',\n    },\n    outer\n  );\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  const widthContained = inner.offsetWidth;\n  ObjectToHtmlStyle(\n    {\n      overflow: 'scroll',\n    },\n    outer\n  );\n  let widthScroll = inner.offsetWidth;\n\n  if (widthContained === widthScroll) {\n    widthScroll = outer.clientWidth;\n  }\n\n  document.body.removeChild(outer);\n  cached = widthContained - widthScroll;\n  return cached;\n}\n","import { useCallback, useEffect, useLayoutEffect, useState } from 'react';\nimport { ReactClientRect, ReactRef } from './type';\nimport getScrollBarSize from './getScrollBarSize';\nimport { getBodyMarginAndPadding } from './fn';\n/**\n * @description 获取ref元素的clientRect属性值\n */\nexport const useClientRect = (ele: ReactRef) => {\n  const [clientRect, setClientRect] = useState<ReactClientRect>(null);\n\n  // 更新元素的 ClientRect\n  const updateClientRect = useCallback(() => {\n    // return () =>\n    setClientRect(ele.current!.getBoundingClientRect());\n  }, []);\n\n  // 只有当 React 组件 didMount 时，才能取到元素的 ClientRect，所以这里要使用 useLayoutEffect\n  useLayoutEffect(() => {\n    if (ele.current) {\n      updateClientRect();\n    }\n  }, []);\n\n  return clientRect;\n};\n\ninterface HuseplacementProps {\n  triggerRect: ReactClientRect;\n  contentRect: ReactClientRect;\n  //todo 添加位置\n}\ninterface TransFormCss {\n  transform: string;\n}\n\nexport const usePlacement = ({\n  triggerRect,\n  contentRect,\n}: HuseplacementProps): TransFormCss => {\n  const [transform, set] = useState<TransFormCss>({ transform: '' });\n  useEffect(() => {\n    if (!contentRect || !triggerRect) {\n      return;\n    }\n    const {\n        left: ContentLeftPxNum,\n        width: ContentWidthPxNum,\n        top: ContentTopPxNum,\n        height: ContentHeightPxNum,\n      } = contentRect!,\n      {\n        width: TriggerWidthPxNum,\n        // height: TriggerHeightPxNum\n      } = triggerRect!;\n    const { margin: BodyMarginWithPx, padding: BodyPaddingWithPx } =\n      getBodyMarginAndPadding();\n    const XCenter =\n        ContentLeftPxNum -\n        (parseInt(BodyMarginWithPx.left) + parseInt(BodyPaddingWithPx.left)) +\n        (ContentWidthPxNum >> 1) -\n        (TriggerWidthPxNum >> 1),\n      YCenter = ContentTopPxNum + ContentHeightPxNum;\n    //todo 目前是放到上面，后续要根据位置调整\n    const transFormX = XCenter,\n      transFormY = YCenter;\n    set(() => ({\n      transform: `translate(${transFormX}px,${transFormY}px)`,\n    }));\n  }, [contentRect, triggerRect]);\n  return transform;\n};\n\nexport const useBodyScrollHide = (hidden: boolean) => {\n  useEffect(() => {\n    const ScrollSize = getScrollBarSize(),\n      bodyStyle = document.body.style;\n    if (hidden) {\n      bodyStyle.overflow = 'hidden';\n      bodyStyle.paddingRight = `${ScrollSize}px`;\n    }\n    return () => {\n      bodyStyle.overflow = '';\n      bodyStyle.paddingRight = '';\n    };\n  }, [hidden]);\n};\n","import Portal from '@src/portal';\nimport { ModalContainer } from './style';\nimport { ModalProps } from './type';\nimport { useBodyScrollHide } from '@src/utils/hook';\nimport { ReactClickEvent } from '@src/utils/type';\nimport customcss from '@src/utils/css';\nimport { forwardRef } from 'react';\n\nconst Modal = forwardRef<any, ModalProps>(function Modal(props, ref) {\n  const { visible = true, children, closeModal, sx, ...resProps } = props,\n    handlerClick = (event: ReactClickEvent) => {\n      event.stopPropagation();\n      if (event.target === event.currentTarget) {\n        closeModal();\n      }\n    };\n  useBodyScrollHide(visible);\n  return (\n    <>\n      {visible && (\n        <Portal>\n          <ModalContainer\n            onClick={handlerClick}\n            {...resProps}\n            css={customcss(sx)}\n            ref={ref}\n          >\n            {children}\n          </ModalContainer>\n        </Portal>\n      )}\n    </>\n  );\n});\n\nexport default Modal;\n","import Portal from '@src/portal';\nimport { useClientRect, usePlacement } from '@src/utils/hook';\nimport { cloneElement, FC, useEffect, useRef, useState } from 'react';\nimport { PopOverProps } from './type';\nimport { ReactRef } from '../utils/type';\nimport customcss from '@src/utils/css';\n\nexport default function Popover(props: PopOverProps) {\n  const { defaultOpen, children, content, sx, ...resProps } = props;\n  const [open, set] = useState(defaultOpen);\n  const anchorRef = useRef(null);\n  return (\n    <>\n      {cloneElement(children, {\n        onClick: () => set((item) => !item),\n        ref: anchorRef,\n      })}\n      {open && (\n        <Portal\n          sx={{\n            position: 'fixed',\n            left: '0',\n            top: '0',\n          }}\n        >\n          <PopoverContent\n            anchorRef={anchorRef}\n            onClose={() => {\n              set((item) => !item);\n            }}\n            css={customcss(sx)}\n            {...resProps}\n          >\n            {content}\n          </PopoverContent>\n        </Portal>\n      )}\n    </>\n  );\n}\n\ntype PopoverContentProps = Omit<PopOverProps, 'defaultOpen' | 'content'> & {\n  onClose: () => void;\n  anchorRef: ReactRef;\n};\n\nconst PopoverContent: FC<PopoverContentProps> = (props) => {\n  const { children, anchorRef, onClose } = props;\n  const popoverItemRef = useRef(null);\n  const anchorRect = useClientRect(anchorRef),\n    popoverItemRect = useClientRect(popoverItemRef);\n  useEffect(() => {\n    const filterDomArr = [anchorRef.current, popoverItemRef.current];\n    const handlerClick = (event: MouseEvent) => {\n      const target = event.target;\n      !filterDomArr.includes(target as HTMLElement) && onClose();\n    };\n    window.addEventListener('click', handlerClick);\n    return () => window.removeEventListener('click', handlerClick);\n  }, []);\n  const styleTransform = usePlacement({\n    triggerRect: popoverItemRect,\n    contentRect: anchorRect,\n  });\n  return (\n    <div\n      //todo 修改样式\n      style={{\n        visibility: styleTransform.transform ? 'visible' : 'hidden',\n        ...styleTransform,\n        display: 'inline-block',\n        position: 'absolute',\n      }}\n    >\n      {cloneElement(children, {\n        ref: popoverItemRef,\n      })}\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { cloneElement, FC, useRef, useState } from 'react';\nimport { ToolTipProps } from './type';\nimport { useClientRect, usePlacement } from '../utils/hook';\nimport { ReactRef } from '../utils/type';\nimport Portal from '@src/portal';\nimport customcss from '@src/utils/css';\n\nexport default function ToolTip(props: ToolTipProps) {\n  const { children, title, sx, ...resProps } = props;\n  const [visible, set] = useState(false);\n  const targetEleRef = useRef(null);\n\n  return (\n    <>\n      {cloneElement(children, {\n        onMouseEnter: set.bind(null, true),\n        onMouseLeave: set.bind(null, false),\n        ref: targetEleRef,\n        ...resProps,\n      })}\n      {visible && (\n        <Portal\n          sx={{\n            position: 'fixed',\n            left: '0',\n            top: '0',\n          }}\n        >\n          <ToolTipTrigger childrenRef={targetEleRef} title={title} sx={sx} />\n        </Portal>\n      )}\n    </>\n  );\n}\n\nconst ToolTipTrigger: FC<{ childrenRef: ReactRef; title: string; sx: any }> = (\n  props\n) => {\n  const { childrenRef, title, sx, ...resProps } = props;\n  const toolTipRef = useRef(null);\n  const toolTipRect = useClientRect(toolTipRef),\n    targetEleRect = useClientRect(childrenRef);\n  const styleTransform = usePlacement({\n    triggerRect: toolTipRect,\n    contentRect: targetEleRect,\n  });\n  return (\n    <>\n      <P\n        ref={toolTipRef}\n        style={{\n          ...styleTransform,\n          visibility: styleTransform.transform ? 'visible' : 'hidden',\n        }}\n        {...resProps}\n        css={customcss(sx)}\n      >\n        {title}\n      </P>\n    </>\n  );\n};\n\n//todo add theme\nconst P = styled('p')`\n  display: inline-block;\n  padding: 5px 8px;\n\n  position: absolute;\n  z-index: 1000;\n  word-wrap: break-word;\n  border-radius: 8px;\n`;\n"],"names":["customcss","sx","css","ObjectToHtmlStyle","obj","ele","key","value","DefensiveSwitch","params","targetObj","defaultRes","getElementStyleByName","cssPropertyName","_cssProperty","item","getBodyMarginAndPadding","res","openValueExampleMarginAndPadding","str","top","right","bottom","left","ButtonShapeToCss","input","ButtonSizeToCss","ThemeToCss","theme","_theme","ButtonWrapper","styled","props","CustomThemeProvider","ThemeProvider","Button","forwardRef","ref","shape","size","type","resProps","ButtonTheme","jsx","InputWrapper","Input","defaultValue","onChange","nanoid","id","byte","keyframesMessageIn","keyframes","keyframesMessageOut","MessagePAnimationConstructor","durantion","transformTime","MessageP","MessageItem","text","add","containerId","getContainer","resDom","MessageContainer","msgList","setList","useState","timeout","remove","msg","prevList","pre","Fragment","createElement","message","createRoot","Portal","children","createPortal","Div","ModalContainer","cached","hasScrollbar","getScrollBarSize","inner","outer","widthContained","widthScroll","useClientRect","clientRect","setClientRect","updateClientRect","useCallback","useLayoutEffect","usePlacement","triggerRect","contentRect","transform","set","useEffect","ContentLeftPxNum","ContentWidthPxNum","ContentTopPxNum","ContentHeightPxNum","TriggerWidthPxNum","BodyMarginWithPx","BodyPaddingWithPx","XCenter","YCenter","transFormX","transFormY","useBodyScrollHide","hidden","ScrollSize","bodyStyle","Modal","visible","closeModal","handlerClick","event","Popover","defaultOpen","content","open","anchorRef","useRef","jsxs","cloneElement","PopoverContent","onClose","popoverItemRef","anchorRect","popoverItemRect","filterDomArr","target","styleTransform","ToolTip","title","targetEleRef","ToolTipTrigger","childrenRef","toolTipRef","toolTipRect","targetEleRect","P"],"mappings":"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"}