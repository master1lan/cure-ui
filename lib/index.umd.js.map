{"version":3,"file":"index.umd.js","sources":["../src/utils/css.ts","../src/utils/fn.ts","../src/button/type.ts","../src/button/style.tsx","../src/utils/wapper.tsx","../src/button/index.tsx","../src/input/style.tsx","../src/input/index.tsx","../node_modules/.pnpm/nanoid@4.0.1/node_modules/nanoid/index.browser.js","../src/message/style.tsx","../src/message/index.tsx","../src/portal/index.tsx","../src/modal/style.tsx","../src/utils/getScrollBarSize.ts","../src/utils/hook.tsx","../src/modal/index.tsx","../src/popover/index.tsx","../src/tooltip/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nexport default function customcss(sx?: React.CSSProperties) {\r\n  return css(sx as any);\r\n}\r\n\r\n/**\r\n * 给元素style添加属性。\r\n */\r\nexport const ObjectToHtmlStyle = (\r\n  obj: React.CSSProperties,\r\n  ele: HTMLElement\r\n) => {\r\n  Object.entries(obj).forEach(([key, value]) => {\r\n    if (value) {\r\n      //@ts-ignore\r\n      ele.style[key] = value;\r\n    }\r\n  });\r\n};\r\n","import { ReactRef } from \"./type\";\r\n\r\n/**\r\n * @description 简化版选择器\r\n */\r\nexport function DefensiveSwitch<T extends string>(\r\n  params: T,\r\n  targetObj: Record<T, string>,\r\n  defaultRes: string\r\n) {\r\n  return targetObj[params] || defaultRes;\r\n}\r\n\r\nexport function curry<T extends (...args: any) => any>(callback: T) {\r\n  return (...args: Parameters<T>) => {\r\n    const params = [...args];\r\n    if (args.length < callback.length) {\r\n      return curry(callback.bind(null, ...params));\r\n    } else {\r\n      return callback(...params);\r\n    }\r\n  };\r\n}\r\n\r\nexport const getElementStyleByName = (\r\n  ele: HTMLElement,\r\n  ...cssPropertyName: string[]\r\n): string[] => {\r\n  const _cssProperty = window.getComputedStyle(ele);\r\n  return cssPropertyName.map((item) => _cssProperty.getPropertyValue(item));\r\n};\r\n\r\nexport const getBodyMarginAndPadding = () => {\r\n  const res = getElementStyleByName(document.body, \"margin\", \"padding\");\r\n  return {\r\n    margin: openValueExampleMarginAndPadding(res[0]),\r\n    padding: openValueExampleMarginAndPadding(res[1]),\r\n  };\r\n};\r\n\r\nexport function openValueExampleMarginAndPadding(str: string) {\r\n  const [top = \"0px\", right = top, bottom = top, left = right] = str.split(\" \");\r\n  return {\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n  };\r\n}\r\n\r\nexport function humpStringToDashString(str: string) {\r\n  return str.replace(/\\B([A-Z])/g, \"-$1\").toLowerCase();\r\n}\r\n","import { css, SerializedStyles } from \"@emotion/react\";\r\nimport { DefensiveSwitch } from \"@src/utils/fn\";\r\nimport { CssSelectRequiredType, CustomSxType } from \"@src/utils/type\";\r\n/**\r\n * button的外形，circle为圆形，round则比较圆滚。\r\n */\r\nexport const ButtonShapeToCssChangeStyleNames = [\"borderRadius\"] as const,\r\n  ButtonShapeTypeArr = [\"default\", \"circle\", \"round\"] as const;\r\ntype ButtonShape = (typeof ButtonShapeTypeArr)[number];\r\nexport const ButtonShapeToCss = (\r\n  input: ButtonShape\r\n): CssSelectRequiredType<(typeof ButtonShapeToCssChangeStyleNames)[number]> => {\r\n  return {\r\n    borderRadius: DefensiveSwitch(\r\n      input,\r\n      { default: \"4px\", circle: \"50%\", round: \"8px\" },\r\n      \"4px\"\r\n    ),\r\n  };\r\n};\r\nexport const ButtonSizeToCssChangeStyleNames = [\"height\", \"padding\"] as const;\r\nexport const ButtonSizeTypeArr = [\"large\", \"middle\", \"small\"] as const;\r\ntype ButtonSize = (typeof ButtonSizeTypeArr)[number];\r\nexport const ButtonSizeToCss = (\r\n  input: ButtonSize\r\n): CssSelectRequiredType<(typeof ButtonSizeToCssChangeStyleNames)[number]> => {\r\n  return {\r\n    height: DefensiveSwitch(\r\n      input,\r\n      { large: \"40px\", middle: \"32px\", small: \"24px\" },\r\n      \"32px\"\r\n    ),\r\n    padding: DefensiveSwitch(\r\n      input,\r\n      { large: \"6px 15px\", middle: \"4px 15px\", small: \"0px 7px\" },\r\n      \"4px 15px\"\r\n    ),\r\n  };\r\n};\r\n\r\ntype ButtonType = \"primary\" | \"default\" | \"text\" | \"dashed\";\r\n//todo 增加type，以及说明文档\r\n// export const ButtonTypeToCss = (input: ButtonType) =>\r\n//   DefensiveSwitch(\r\n//     input,\r\n//     { primary: \"\", default: \"\", text: \"\", dashed: \"\" },\r\n//     \"\"\r\n//   );\r\n\r\nexport const ThemeToCss = (theme: unknown): SerializedStyles => {\r\n  const _theme = theme as ButtonThemeType;\r\n  return css({\r\n    ...ButtonSizeToCss(_theme.size),\r\n    ...ButtonShapeToCss(_theme.shape),\r\n  });\r\n};\r\n\r\ntype NativeButtonProps = Omit<\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n  \"type\"\r\n> &\r\n  Partial<{\r\n    htmlType: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"];\r\n  }>;\r\nexport type CustomButtonProps = Partial<{\r\n  shape: ButtonShape;\r\n  size: ButtonSize;\r\n  type: ButtonType;\r\n}>;\r\n\r\nexport type ButtonThemeType = Required<CustomButtonProps>;\r\n\r\nexport type ButtonProps = NativeButtonProps & CustomButtonProps & CustomSxType;\r\n","import styled from \"@emotion/styled\";\r\nimport { ThemeToCss } from \"./type\";\r\n\r\nexport const ButtonWrapper = styled.button`\r\n  font-size: 16px;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-color: #d9d9d9;\r\n  border-style: solid;\r\n  background-color: #fff;\r\n  color: rgba(0, 0, 0, 0.88);\r\n  outline: none;\r\n  transition: all 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n\r\n  :hover,\r\n  :active {\r\n    color: #0958d9;\r\n    border-color: #0958d9;\r\n  }\r\n  box-shadow: 0 2px 0 rgb(0 0 0 / 2%);\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n\r\n  ${(props) => ThemeToCss(props.theme)}\r\n`;\r\n//todo 进行自定义\r\n","import { ReactElement } from \"react\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\n\r\nexport default function CustomThemeProvider<T>(props: {\r\n  theme: T;\r\n  children: ReactElement;\r\n}) {\r\n  return (\r\n    <ThemeProvider theme={props.theme as any}>{props.children}</ThemeProvider>\r\n  );\r\n}\r\n","import customcss from \"../utils/css\";\r\nimport { ButtonWrapper } from \"./style\";\r\nimport { ButtonProps, ButtonThemeType } from \"./type\";\r\nimport CustomThemeProvider from \"@src/utils/wapper\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Button = forwardRef(function Button(props: ButtonProps, ref: any) {\r\n  const {\r\n    sx,\r\n    shape = \"default\",\r\n    size = \"middle\",\r\n    type = \"default\",\r\n    ...resProps\r\n  } = props;\r\n  const ButtonTheme: ButtonThemeType = {\r\n    shape,\r\n    size,\r\n    type,\r\n  };\r\n  return (\r\n    <CustomThemeProvider theme={ButtonTheme}>\r\n      <ButtonWrapper css={customcss(props.sx)} {...resProps} ref={ref}>\r\n        {props.children}\r\n      </ButtonWrapper>\r\n    </CustomThemeProvider>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const InputWrapper = styled.input`\r\n  padding: 4px 11px;\r\n  box-sizing: border-box;\r\n  margin: 0px;\r\n  position: relative;\r\n  font-size: 14px;\r\n  text-overflow: ellipsis;\r\n  cursor: text;\r\n  color: rgba(0, 0, 0, 0.88);\r\n  background-color: #fff;\r\n  background-image: none;\r\n  border: 0.8px solid rgb(217, 217, 217);\r\n  border-radius: 6px;\r\n`;\r\n","import { InputWrapper } from \"./style\";\r\nimport { InputProps } from \"./type\";\r\nimport customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\nconst Input = forwardRef(function Input(props: InputProps, ref: any) {\r\n  const { defaultValue, onChange, sx, ...resProps } = props;\r\n  return (\r\n    <InputWrapper\r\n      css={customcss(sx)}\r\n      defaultValue={defaultValue}\r\n      onChange={onChange}\r\n      {...resProps}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\nexport default Input;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { css, keyframes } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n/**\r\n * message components keyframes\r\n */\r\nexport const keyframesMessageIn = keyframes`\r\n     from {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n`,\r\n  keyframesMessageOut = keyframes`\r\n    0% {\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n    }\r\n    to {\r\n        opacity: 0;\r\n        transform: translateY(-10px);\r\n    }\r\n`;\r\n/**\r\n * message animation constructor\r\n */\r\nexport const MessagePAnimationConstructor = (\r\n  durantion: number = 3,\r\n  transformTime: number = 0.1\r\n) => {\r\n  if (durantion < transformTime) {\r\n    throw new Error(\r\n      `You can't let the animation transition time exceed the total duration!`\r\n    );\r\n  }\r\n  return css`\r\n    animation: ${keyframesMessageIn} ${transformTime} linear,\r\n      ${keyframesMessageOut} ${transformTime} linear\r\n        ${durantion - transformTime} forwards;\r\n  `;\r\n};\r\n\r\nexport const MessageP = styled.p`\r\n  border-radius: 8px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 10px;\r\n  padding: 12px 24px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  ${MessagePAnimationConstructor(3, 0.1)}\r\n`;\r\n","import { FC, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { MessageP } from \"./style\";\r\nimport { ObjectToHtmlStyle } from \"@src/utils/css\";\r\nimport { MessageItemProps, Notice, MessageType } from \"./type\";\r\n\r\n//todo 增加svg的显示\r\nconst MessageItem: FC<MessageItemProps> = (props) => {\r\n  const { text, type } = props;\r\n  return (\r\n    <MessageP>\r\n      <span>{text}</span>\r\n    </MessageP>\r\n  );\r\n};\r\n\r\nlet add: (message: Notice) => void;\r\nconst containerId = `container_message`;\r\n\r\nfunction getContainer() {\r\n  let resDom = document.querySelector(containerId) as HTMLElement;\r\n  if (!resDom) {\r\n    resDom = document.createElement(\"div\");\r\n    resDom.id = containerId;\r\n    ObjectToHtmlStyle(\r\n      {\r\n        position: \"fixed\",\r\n        top: \"10px\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, 0)\",\r\n        zIndex: \"9999\",\r\n      },\r\n      resDom\r\n    );\r\n    document.body.appendChild(resDom);\r\n  }\r\n  return resDom;\r\n}\r\n\r\nconst MessageContainer = () => {\r\n  const [msgList, setList] = useState<Notice[]>([]);\r\n  //todo 改成options\r\n  const timeout = 3000;\r\n  const remove = (msg: Notice) =>\r\n    setList((prevList) => prevList.filter((item) => msg.key !== item.key));\r\n  //hack\r\n  add = (msg) => {\r\n    setList((pre) => [...pre, msg]);\r\n    setTimeout(() => {\r\n      remove(msg);\r\n    }, timeout);\r\n  };\r\n  return (\r\n    <>\r\n      {msgList.map((msg) => (\r\n        <MessageItem {...msg} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst message = (() => {\r\n  createRoot(getContainer()).render(<MessageContainer />);\r\n  const msgType = (type: MessageType) => (text: string) =>\r\n    add({ text, type, key: nanoid(3) });\r\n  return {\r\n    info: msgType(\"info\"),\r\n  };\r\n})();\r\n\r\nexport default message;\r\n//todo ！！！ 改成动态创建\r\n","import customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { ProtalProps } from \"./type\";\r\nconst Portal = forwardRef(function Portal(props: ProtalProps, ref: any) {\r\n  const { children, sx, ...resProps } = props;\r\n  return createPortal(\r\n    <div {...resProps} css={customcss(sx)} ref={ref}>\r\n      {children}\r\n    </div>,\r\n    document.body\r\n  );\r\n});\r\nexport default Portal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 100;\r\n`;\r\n","import { ObjectToHtmlStyle } from \"./css\";\r\n\r\nlet cached: number | null = null;\r\n\r\nexport default function getScrollBarSize(): number {\r\n  if (typeof cached === \"number\") {\r\n    return cached;\r\n  }\r\n  const inner = document.createElement(\"div\");\r\n  ObjectToHtmlStyle(\r\n    {\r\n      width: \"100%\",\r\n      height: \"200px\",\r\n    },\r\n    inner\r\n  );\r\n  const outer = document.createElement(\"div\");\r\n  ObjectToHtmlStyle(\r\n    {\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      pointerEvents: \"none\",\r\n      visibility: \"hidden\",\r\n      width: \"200px\",\r\n      height: \"150px\",\r\n      overflow: \"hidden\",\r\n    },\r\n    outer\r\n  );\r\n  outer.appendChild(inner);\r\n  document.body.appendChild(outer);\r\n  const widthContained = inner.offsetWidth;\r\n  ObjectToHtmlStyle(\r\n    {\r\n      overflow: \"scroll\",\r\n    },\r\n    outer\r\n  );\r\n  let widthScroll = inner.offsetWidth;\r\n\r\n  if (widthContained === widthScroll) {\r\n    widthScroll = outer.clientWidth;\r\n  }\r\n\r\n  document.body.removeChild(outer);\r\n  cached = widthContained - widthScroll;\r\n  return cached;\r\n}\r\n","import { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { ReactClientRect, ReactRef } from \"./type\";\r\nimport getScrollBarSize from \"./getScrollBarSize\";\r\nimport { getBodyMarginAndPadding } from \"./fn\";\r\n/**\r\n * @description 获取ref元素的clientRect属性值\r\n */\r\nexport const useClientRect = (ele: ReactRef) => {\r\n  const [clientRect, setClientRect] = useState<ReactClientRect>(null);\r\n\r\n  // 更新元素的 ClientRect\r\n  const updateClientRect = useCallback(() => {\r\n    // return () =>\r\n    setClientRect(ele.current!.getBoundingClientRect());\r\n  }, []);\r\n\r\n  // 只有当 React 组件 didMount 时，才能取到元素的 ClientRect，所以这里要使用 useLayoutEffect\r\n  useLayoutEffect(() => {\r\n    if (ele.current) {\r\n      updateClientRect();\r\n    }\r\n  }, []);\r\n\r\n  return clientRect;\r\n};\r\n\r\ninterface HuseplacementProps {\r\n  triggerRect: ReactClientRect;\r\n  contentRect: ReactClientRect;\r\n  //todo 添加位置\r\n}\r\ninterface TransFormCss {\r\n  transform: string;\r\n}\r\n\r\nexport const usePlacement = ({\r\n  triggerRect,\r\n  contentRect,\r\n}: HuseplacementProps): TransFormCss => {\r\n  const [transform, set] = useState<TransFormCss>({ transform: \"\" });\r\n  useEffect(() => {\r\n    if (!contentRect || !triggerRect) {\r\n      return;\r\n    }\r\n    const {\r\n        left: ContentLeftPxNum,\r\n        width: ContentWidthPxNum,\r\n        top: ContentTopPxNum,\r\n        height: ContentHeightPxNum,\r\n      } = contentRect!,\r\n      { width: TriggerWidthPxNum, height: TriggerHeightPxNum } = triggerRect!;\r\n    const { margin: BodyMarginWithPx, padding: BodyPaddingWithPx } =\r\n      getBodyMarginAndPadding();\r\n    const XCenter =\r\n        ContentLeftPxNum -\r\n        (parseInt(BodyMarginWithPx.left) + parseInt(BodyPaddingWithPx.left)) +\r\n        (ContentWidthPxNum >> 1) -\r\n        (TriggerWidthPxNum >> 1),\r\n      YCenter = ContentTopPxNum + ContentHeightPxNum;\r\n    //todo 目前是放到上面，后续要根据位置调整\r\n    const transFormX = XCenter,\r\n      transFormY = YCenter;\r\n    set((obj) => ({\r\n      transform: `translate(${transFormX}px,${transFormY}px)`,\r\n    }));\r\n  }, [contentRect, triggerRect]);\r\n  return transform;\r\n};\r\n\r\nexport const useBodyScrollHide = (hidden: boolean) => {\r\n  useEffect(() => {\r\n    const ScrollSize = getScrollBarSize(),\r\n      bodyStyle = document.body.style;\r\n    if (hidden) {\r\n      bodyStyle.overflow = \"hidden\";\r\n      bodyStyle.paddingRight = `${ScrollSize}px`;\r\n    }\r\n    return () => {\r\n      bodyStyle.overflow = \"\";\r\n      bodyStyle.paddingRight = \"\";\r\n    };\r\n  }, [hidden]);\r\n};\r\n","import Portal from \"@src/portal\";\r\nimport { ModalContainer } from \"./style\";\r\nimport { ModalProps } from \"./type\";\r\nimport { useBodyScrollHide } from \"@src/utils/hook\";\r\nimport { ReactClickEvent } from \"@src/utils/type\";\r\nimport customcss from \"@src/utils/css\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Modal = forwardRef<any, ModalProps>(function Modal(props, ref) {\r\n  const { visible = true, children, closeModal, sx, ...resProps } = props,\r\n    handlerClick = (event: ReactClickEvent) => {\r\n      event.stopPropagation();\r\n      if (event.target === event.currentTarget) {\r\n        closeModal();\r\n      }\r\n    };\r\n  useBodyScrollHide(visible);\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <Portal>\r\n          <ModalContainer\r\n            onClick={handlerClick}\r\n            {...resProps}\r\n            css={customcss(sx)}\r\n            ref={ref}\r\n          >\r\n            {children}\r\n          </ModalContainer>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import Portal from \"@src/portal\";\r\nimport { useClientRect, usePlacement } from \"@src/utils/hook\";\r\nimport { cloneElement, FC, useEffect, useRef, useState } from \"react\";\r\nimport { PopOverProps } from \"./type\";\r\nimport { ReactRef } from \"../utils/type\";\r\nimport customcss from \"@src/utils/css\";\r\n\r\nexport default function Popover(props: PopOverProps) {\r\n  const { defaultOpen, children, content, sx, ...resProps } = props;\r\n  const [open, set] = useState(defaultOpen);\r\n  const anchorRef = useRef(null);\r\n  return (\r\n    <>\r\n      {cloneElement(children, {\r\n        onClick: () => set((item) => !item),\r\n        ref: anchorRef,\r\n      })}\r\n      {open && (\r\n        <Portal\r\n          sx={{\r\n            position: \"fixed\",\r\n            left: \"0\",\r\n            top: \"0\",\r\n          }}\r\n        >\r\n          <PopoverContent\r\n            anchorRef={anchorRef}\r\n            onClose={() => {\r\n              set((item) => !item);\r\n            }}\r\n            css={customcss(sx)}\r\n            {...resProps}\r\n          >\r\n            {content}\r\n          </PopoverContent>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ntype PopoverContentProps = Omit<PopOverProps, \"defaultOpen\" | \"content\"> & {\r\n  onClose: () => void;\r\n  anchorRef: ReactRef;\r\n};\r\n\r\nconst PopoverContent: FC<PopoverContentProps> = (props) => {\r\n  const { children, anchorRef, onClose } = props;\r\n  const popoverItemRef = useRef(null);\r\n  const anchorRect = useClientRect(anchorRef),\r\n    popoverItemRect = useClientRect(popoverItemRef);\r\n  useEffect(() => {\r\n    const filterDomArr = [anchorRef.current, popoverItemRef.current];\r\n    const handlerClick = (event: MouseEvent) => {\r\n      const target = event.target;\r\n      !filterDomArr.includes(target as HTMLElement) && onClose();\r\n    };\r\n    window.addEventListener(\"click\", handlerClick);\r\n    return () => window.removeEventListener(\"click\", handlerClick);\r\n  }, []);\r\n  const styleTransform = usePlacement({\r\n    triggerRect: popoverItemRect,\r\n    contentRect: anchorRect,\r\n  });\r\n  return (\r\n    <div\r\n      //todo 修改样式\r\n      style={{\r\n        visibility: styleTransform.transform ? \"visible\" : \"hidden\",\r\n        ...styleTransform,\r\n        display: \"inline-block\",\r\n        position: \"absolute\",\r\n      }}\r\n    >\r\n      {cloneElement(children, {\r\n        ref: popoverItemRef,\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { cloneElement, FC, useRef, useState } from \"react\";\r\nimport { ToolTipProps } from \"./type\";\r\nimport { useClientRect, usePlacement } from \"../utils/hook\";\r\nimport { ReactRef } from \"../utils/type\";\r\nimport Portal from \"@src/portal\";\r\nimport customcss from \"@src/utils/css\";\r\n\r\nexport default function ToolTip(props: ToolTipProps) {\r\n  const { children, title, sx, ...resProps } = props;\r\n  const [visible, set] = useState(false);\r\n  const targetEleRef = useRef(null);\r\n\r\n  return (\r\n    <>\r\n      {cloneElement(children, {\r\n        onMouseEnter: set.bind(null, true),\r\n        onMouseLeave: set.bind(null, false),\r\n        ref: targetEleRef,\r\n        ...resProps,\r\n      })}\r\n      {visible && (\r\n        <Portal\r\n          sx={{\r\n            position: \"fixed\",\r\n            left: \"0\",\r\n            top: \"0\",\r\n          }}\r\n        >\r\n          <ToolTipTrigger childrenRef={targetEleRef} title={title} sx={sx} />\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ToolTipTrigger: FC<{ childrenRef: ReactRef; title: string; sx: any }> = (\r\n  props\r\n) => {\r\n  const { childrenRef, title, sx, ...resProps } = props;\r\n  const toolTipRef = useRef(null);\r\n  const toolTipRect = useClientRect(toolTipRef),\r\n    targetEleRect = useClientRect(childrenRef);\r\n  const styleTransform = usePlacement({\r\n    triggerRect: toolTipRect,\r\n    contentRect: targetEleRect,\r\n  });\r\n  return (\r\n    <>\r\n      <P\r\n        ref={toolTipRef}\r\n        style={{\r\n          ...styleTransform,\r\n          visibility: styleTransform.transform ? \"visible\" : \"hidden\",\r\n        }}\r\n        {...resProps}\r\n        css={customcss(sx)}\r\n      >\r\n        {title}\r\n      </P>\r\n    </>\r\n  );\r\n};\r\n\r\n//todo add theme\r\nconst P = styled(\"p\")`\r\n  display: inline-block;\r\n  padding: 5px 8px;\r\n\r\n  position: absolute;\r\n  z-index: 1000;\r\n  word-wrap: break-word;\r\n  border-radius: 8px;\r\n`;\r\n"],"names":["customcss","sx","css","ObjectToHtmlStyle","obj","ele","key","value","DefensiveSwitch","params","targetObj","defaultRes","getElementStyleByName","cssPropertyName","_cssProperty","item","getBodyMarginAndPadding","res","openValueExampleMarginAndPadding","str","top","right","bottom","left","ButtonShapeToCss","input","ButtonSizeToCss","ThemeToCss","theme","_theme","ButtonWrapper","styled","props","CustomThemeProvider","ThemeProvider","Button","forwardRef","ref","shape","size","type","resProps","ButtonTheme","jsx","InputWrapper","Input","defaultValue","onChange","nanoid","id","byte","keyframesMessageIn","keyframes","keyframesMessageOut","MessagePAnimationConstructor","durantion","transformTime","MessageP","MessageItem","text","add","containerId","getContainer","resDom","MessageContainer","msgList","setList","useState","timeout","remove","msg","prevList","pre","Fragment","message","createRoot","Portal","children","createPortal","ModalContainer","cached","getScrollBarSize","inner","outer","widthContained","widthScroll","useClientRect","clientRect","setClientRect","updateClientRect","useCallback","useLayoutEffect","usePlacement","triggerRect","contentRect","transform","set","useEffect","ContentLeftPxNum","ContentWidthPxNum","ContentTopPxNum","ContentHeightPxNum","TriggerWidthPxNum","TriggerHeightPxNum","BodyMarginWithPx","BodyPaddingWithPx","XCenter","YCenter","transFormX","transFormY","useBodyScrollHide","hidden","ScrollSize","bodyStyle","Modal","visible","closeModal","handlerClick","event","Popover","defaultOpen","content","open","anchorRef","useRef","jsxs","cloneElement","PopoverContent","onClose","popoverItemRef","anchorRect","popoverItemRect","filterDomArr","target","styleTransform","ToolTip","title","targetEleRef","ToolTipTrigger","childrenRef","toolTipRef","toolTipRect","targetEleRect","P"],"mappings":"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"}